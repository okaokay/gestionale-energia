# Docker Compose definitivo per hosting via URL (Hostinger)
# - Clona il container esistente (immagine pubblica) e migra/inizializza DB
# - Include env, volumi, porte, dipendenze, logging e sicurezza

services:
  gestionale-energia:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: gestionale-energia
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - TZ=Europe/Rome
      - LOG_LEVEL=info
      - FRONTEND_URL=https://gmgestionale.cloud
      - BACKEND_URL=https://gmgestionale.cloud
      - CORS_ORIGIN=https://gmgestionale.cloud
      - SECURE_COOKIES=true
      - TRUST_PROXY=true
      - JWT_SECRET=${JWT_SECRET:-change-me-please-2024}
      - JWT_EXPIRES_IN=7d
      - DATABASE_PATH=/app/backend/database/database.sqlite
      - INIT_DB=true
    volumes:
      - uploads_data:/app/uploads
      - database_data:/app/backend/database
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    command: ["node", "scripts/start-with-migrate.js"]
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    networks:
      - gestionale_net

  nginx:
    image: nginx:alpine
    container_name: gestionale-nginx
    depends_on:
      gestionale-energia:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    # Config reverse proxy inline per evitare file esterni
    command: |
      sh -lc 'cat > /etc/nginx/conf.d/default.conf << "EOF"
      server {
        listen 80;
        server_name gmgestionale.cloud www.gmgestionale.cloud srv1072066.hstgr.cloud;
        client_max_body_size 50M;
        location / {
          proxy_pass http://gestionale-energia:3001;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $$http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header Host $$host;
          proxy_set_header X-Real-IP $$remote_addr;
          proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $$scheme;
          proxy_read_timeout 300;
        }
        location /health {
          proxy_pass http://gestionale-energia:3001/health;
          access_log off;
        }
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-XSS-Protection "1; mode=block";
      }

      # HTTPS placeholder (certificati da gestire esternamente o via Traefik/Certbot)
      # server {
      #   listen 443 ssl http2;
      #   server_name gmgestionale.cloud www.gmgestionale.cloud;
      #   ssl_certificate /etc/nginx/ssl/cert.pem;
      #   ssl_certificate_key /etc/nginx/ssl/key.pem;
      #   location / {
      #     proxy_pass http://gestionale-energia:3001;
      #     proxy_set_header Host $$host;
      #     proxy_set_header X-Real-IP $$remote_addr;
      #     proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
      #     proxy_set_header X-Forwarded-Proto $$scheme;
      #   }
      # }
      EOF
      nginx -g "daemon off;"'
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    networks:
      - gestionale_net

networks:
  gestionale_net:
    driver: bridge

volumes:
  uploads_data:
    driver: local
  database_data:
    driver: local